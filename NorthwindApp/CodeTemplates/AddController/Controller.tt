<#@ template language="C#" HostSpecific="True" #>
<#@ output extension="cs" #>
<#
MvcTextTemplateHost mvcHost = (MvcTextTemplateHost)(Host);
#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using NorthwindApp.Domain.Repositories;

namespace <#= mvcHost.Namespace #>
{
    public class <#= mvcHost.ControllerName #> : Controller
    {
    
		public <#= mvcHost.ControllerName #>(I<#= mvcHost.ControllerRootName #>Repository repository)
		{
			_repository = repository;
		}
		
		private I<#= mvcHost.ControllerRootName #>Repository _repository;
    
        //
        // GET: /<#= mvcHost.ControllerRootName #>/

		public ActionResult Index()
        {
            var entities = _repository.GetAll();
            return View(entities);
        }

<#
if(mvcHost.AddActionMethods) {
#>
        //
        // GET: /<#= mvcHost.ControllerRootName #>/Details/5

        public ActionResult Details(int id)
        {
            var entity = _repository.GetById(id);
            return View(entity);
        }

        //
        // GET: /<#= mvcHost.ControllerRootName #>/Create

        public ActionResult Create()
        {
            return View(new Domain.<#= mvcHost.ControllerRootName #>());
        } 

        //
        // POST: /<#= mvcHost.ControllerRootName #>/Create

        [AcceptVerbs(HttpVerbs.Post)]
        [ValidateAntiForgeryToken()]
        public ActionResult Create(Domain.<#= mvcHost.ControllerRootName #> entity)
        {
            try
            {
                if (!ModelState.IsValid)
                    return View(entity);
                _repository.Create(entity);
                return RedirectToAction("Index");
            }
            catch
            {
                return View(entity);
            }
        }

        //
        // GET: /<#= mvcHost.ControllerRootName #>/Edit/5
 
        public ActionResult Edit(int id)
        {
            var entity = _repository.GetById(id);
            return View(entity);
        }

        //
        // POST: /<#= mvcHost.ControllerRootName #>/Edit/5

        [AcceptVerbs(HttpVerbs.Post)]
        [ValidateAntiForgeryToken()]
        public ActionResult Edit(Domain.<#= mvcHost.ControllerRootName #> entity)
        {
            try
            {
                if (!ModelState.IsValid)
                    return View(entity);
                _repository.Update(entity);
                return RedirectToAction("Index");
            }
            catch
            {
                return View(entity);
            }
        }
        
        [AcceptVerbs(HttpVerbs.Post)]
        [ValidateAntiForgeryToken()]
        public ActionResult Delete(int id)
        {
            try
            {                
                _repository.Delete(id);
                return RedirectToAction("Index");
            }
            catch
            {
                return View("Index");
            }
        }

        
<#
}
#>
    }
}
